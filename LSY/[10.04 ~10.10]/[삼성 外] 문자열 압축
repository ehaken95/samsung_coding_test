#include <string>
#include <vector>
#include <deque>
#include <algorithm>
#include <iostream>

using namespace std;

int solution(string s) {
	int answer = 0;
	int L = s.length();
	answer = L;

	for (int i = 1; i <= L / 2; i++) // 자르는 수 (0번째부터 n개 자르기)
	{
		deque<pair<string, int>> check;
		for (int j = 0; j < L; j += i) // substr의 첫번째 인자
		{
			if (j + i > L) //자르려는 수가 범위를 초과하면 substr 불가. 
			{
				string tmp = s.substr(j); //문자열 n번째까지 자르고 남은걸 tmp에 넣음.
				check.push_front(make_pair(tmp, 1)); //check 맨 앞에 tmp,1이라고 넣고 멈춤
				cout << " i = " << i << ", j = " << j << "인 루프에서 [if(j + i > L 걸림)] check = (" << check.front().first <<"," << check.front().second<< "\n";
				break;
			}
			string tmp = s.substr(j, i); //j번째부터 i개 자름 = tmp
			if (check.empty()) //만약 check가 비었으면
			{
				check.push_front(make_pair(tmp, 1)); //check 맨 앞에 tmp, 1 넣음 
				cout << " i = " << i << ", j = " << j << "인 루프에서 [check.empty() 걸림] check = (" << check.front().first << "," << check.front().second << "\n";
			}
			else //안비었으면
			{
				if (check.front().first == tmp) //check의 맨 앞의 첫번째 요소 비교할 문자열이 tmp랑 같으면
				{
					check.front().second++; //check의 맨 앞의 두번째를 ++함
					cout << " i = " << i << ", j = " << j << "인 루프에서 [if (check.front().first == tmp)] 걸림 check = (" << check.front().first << "," << check.front().second << "\n";
				}
				else //다르면
				{
					check.push_front(make_pair(tmp, 1)); //check 맨 앞에 tmp 넣고 1 넣음
					cout << " i = " << i << ", j = " << j << "인 루프에서 [if (check.front().first != tmp)] 걸림 check = (" << check.front().first << "," << check.front().second << "\n";
				}
			}
			cout << "\n";
		}
		cout << " i = " << i << "인 루프에서 [j루프 벗어남] 찐 check.front() = (" << check.front().first << "," << check.front().second << "\n";
		string tmp;
		while (!check.empty())
		{
			if (check.back().second == 1) //맨뒤의 숫자가 1이면
			{
				tmp += check.back().first; //문자열 붙여넣음
			}
			else //1이 아니면
			{
				tmp += to_string(check.back().second); //뒤에 붙은 숫자를 string 전환
				tmp += check.back().first; //그리고 문자열 뒤에 붙임
			}

			check.pop_back(); //뒤에 있는거 뺌

		}
		if (answer > tmp.length()) //만약 정답(길이) 가 tmp 길이보다 크면 원래는 문자열 길이가 정답임
			answer = tmp.length(); //그러면 문자열 길이가 tmp 길이로 바뀌어짐
	}

	cout << answer << "\n";
	return answer;
}
